// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: op_log_entry.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "op_log_entry.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PbLogSetRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PbLogSetRecord_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_op_5flog_5fentry_2eproto() {
  protobuf_AddDesc_op_5flog_5fentry_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "op_log_entry.proto");
  GOOGLE_CHECK(file != NULL);
  PbLogSetRecord_descriptor_ = file->message_type(0);
  static const int PbLogSetRecord_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PbLogSetRecord, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PbLogSetRecord, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PbLogSetRecord, put_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PbLogSetRecord, pdut_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PbLogSetRecord, dv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PbLogSetRecord, srcreplica_),
  };
  PbLogSetRecord_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PbLogSetRecord_descriptor_,
      PbLogSetRecord::default_instance_,
      PbLogSetRecord_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PbLogSetRecord, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PbLogSetRecord, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PbLogSetRecord));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_op_5flog_5fentry_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PbLogSetRecord_descriptor_, &PbLogSetRecord::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_op_5flog_5fentry_2eproto() {
  delete PbLogSetRecord::default_instance_;
  delete PbLogSetRecord_reflection_;
}

void protobuf_AddDesc_op_5flog_5fentry_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_rpc_5fmessages_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022op_log_entry.proto\032\022rpc_messages.proto"
    "\"\246\001\n\016PbLogSetRecord\022\013\n\003Key\030\001 \002(\014\022\r\n\005Valu"
    "e\030\002 \002(\014\022 \n\003PUT\030\003 \002(\0132\023.PbPhysicalTimeSpe"
    "c\022!\n\004PDUT\030\004 \001(\0132\023.PbPhysicalTimeSpec\022\037\n\002"
    "DV\030\005 \003(\0132\023.PbPhysicalTimeSpec\022\022\n\nSrcRepl"
    "ica\030\006 \002(\005", 209);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "op_log_entry.proto", &protobuf_RegisterTypes);
  PbLogSetRecord::default_instance_ = new PbLogSetRecord();
  PbLogSetRecord::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_op_5flog_5fentry_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_op_5flog_5fentry_2eproto {
  StaticDescriptorInitializer_op_5flog_5fentry_2eproto() {
    protobuf_AddDesc_op_5flog_5fentry_2eproto();
  }
} static_descriptor_initializer_op_5flog_5fentry_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PbLogSetRecord::kKeyFieldNumber;
const int PbLogSetRecord::kValueFieldNumber;
const int PbLogSetRecord::kPUTFieldNumber;
const int PbLogSetRecord::kPDUTFieldNumber;
const int PbLogSetRecord::kDVFieldNumber;
const int PbLogSetRecord::kSrcReplicaFieldNumber;
#endif  // !_MSC_VER

PbLogSetRecord::PbLogSetRecord()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbLogSetRecord)
}

void PbLogSetRecord::InitAsDefaultInstance() {
  put_ = const_cast< ::PbPhysicalTimeSpec*>(&::PbPhysicalTimeSpec::default_instance());
  pdut_ = const_cast< ::PbPhysicalTimeSpec*>(&::PbPhysicalTimeSpec::default_instance());
}

PbLogSetRecord::PbLogSetRecord(const PbLogSetRecord& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PbLogSetRecord)
}

void PbLogSetRecord::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  put_ = NULL;
  pdut_ = NULL;
  srcreplica_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PbLogSetRecord::~PbLogSetRecord() {
  // @@protoc_insertion_point(destructor:PbLogSetRecord)
  SharedDtor();
}

void PbLogSetRecord::SharedDtor() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (this != default_instance_) {
    delete put_;
    delete pdut_;
  }
}

void PbLogSetRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PbLogSetRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PbLogSetRecord_descriptor_;
}

const PbLogSetRecord& PbLogSetRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_op_5flog_5fentry_2eproto();
  return *default_instance_;
}

PbLogSetRecord* PbLogSetRecord::default_instance_ = NULL;

PbLogSetRecord* PbLogSetRecord::New() const {
  return new PbLogSetRecord;
}

void PbLogSetRecord::Clear() {
  if (_has_bits_[0 / 32] & 47) {
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        key_->clear();
      }
    }
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        value_->clear();
      }
    }
    if (has_put()) {
      if (put_ != NULL) put_->::PbPhysicalTimeSpec::Clear();
    }
    if (has_pdut()) {
      if (pdut_ != NULL) pdut_->::PbPhysicalTimeSpec::Clear();
    }
    srcreplica_ = 0;
  }
  dv_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PbLogSetRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbLogSetRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes Key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Value;
        break;
      }

      // required bytes Value = 2;
      case 2: {
        if (tag == 18) {
         parse_Value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_PUT;
        break;
      }

      // required .PbPhysicalTimeSpec PUT = 3;
      case 3: {
        if (tag == 26) {
         parse_PUT:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_put()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_PDUT;
        break;
      }

      // optional .PbPhysicalTimeSpec PDUT = 4;
      case 4: {
        if (tag == 34) {
         parse_PDUT:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pdut()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_DV;
        break;
      }

      // repeated .PbPhysicalTimeSpec DV = 5;
      case 5: {
        if (tag == 42) {
         parse_DV:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dv()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_DV;
        if (input->ExpectTag(48)) goto parse_SrcReplica;
        break;
      }

      // required int32 SrcReplica = 6;
      case 6: {
        if (tag == 48) {
         parse_SrcReplica:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &srcreplica_)));
          set_has_srcreplica();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbLogSetRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbLogSetRecord)
  return false;
#undef DO_
}

void PbLogSetRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbLogSetRecord)
  // required bytes Key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // required bytes Value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // required .PbPhysicalTimeSpec PUT = 3;
  if (has_put()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->put(), output);
  }

  // optional .PbPhysicalTimeSpec PDUT = 4;
  if (has_pdut()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pdut(), output);
  }

  // repeated .PbPhysicalTimeSpec DV = 5;
  for (int i = 0; i < this->dv_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->dv(i), output);
  }

  // required int32 SrcReplica = 6;
  if (has_srcreplica()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->srcreplica(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PbLogSetRecord)
}

::google::protobuf::uint8* PbLogSetRecord::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PbLogSetRecord)
  // required bytes Key = 1;
  if (has_key()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // required bytes Value = 2;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // required .PbPhysicalTimeSpec PUT = 3;
  if (has_put()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->put(), target);
  }

  // optional .PbPhysicalTimeSpec PDUT = 4;
  if (has_pdut()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->pdut(), target);
  }

  // repeated .PbPhysicalTimeSpec DV = 5;
  for (int i = 0; i < this->dv_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->dv(i), target);
  }

  // required int32 SrcReplica = 6;
  if (has_srcreplica()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->srcreplica(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbLogSetRecord)
  return target;
}

int PbLogSetRecord::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes Key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // required bytes Value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

    // required .PbPhysicalTimeSpec PUT = 3;
    if (has_put()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->put());
    }

    // optional .PbPhysicalTimeSpec PDUT = 4;
    if (has_pdut()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pdut());
    }

    // required int32 SrcReplica = 6;
    if (has_srcreplica()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->srcreplica());
    }

  }
  // repeated .PbPhysicalTimeSpec DV = 5;
  total_size += 1 * this->dv_size();
  for (int i = 0; i < this->dv_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dv(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PbLogSetRecord::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PbLogSetRecord* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PbLogSetRecord*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PbLogSetRecord::MergeFrom(const PbLogSetRecord& from) {
  GOOGLE_CHECK_NE(&from, this);
  dv_.MergeFrom(from.dv_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_put()) {
      mutable_put()->::PbPhysicalTimeSpec::MergeFrom(from.put());
    }
    if (from.has_pdut()) {
      mutable_pdut()->::PbPhysicalTimeSpec::MergeFrom(from.pdut());
    }
    if (from.has_srcreplica()) {
      set_srcreplica(from.srcreplica());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PbLogSetRecord::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PbLogSetRecord::CopyFrom(const PbLogSetRecord& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbLogSetRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000027) != 0x00000027) return false;

  if (has_put()) {
    if (!this->put().IsInitialized()) return false;
  }
  if (has_pdut()) {
    if (!this->pdut().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->dv())) return false;
  return true;
}

void PbLogSetRecord::Swap(PbLogSetRecord* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(value_, other->value_);
    std::swap(put_, other->put_);
    std::swap(pdut_, other->pdut_);
    dv_.Swap(&other->dv_);
    std::swap(srcreplica_, other->srcreplica_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PbLogSetRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PbLogSetRecord_descriptor_;
  metadata.reflection = PbLogSetRecord_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
